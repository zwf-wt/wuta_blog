import{_ as a,o as s,c as e,R as n}from"./chunks/framework.MMMQMGZx.js";const g=JSON.parse('{"title":"虚拟环境","description":"","frontmatter":{},"headers":[],"relativePath":"views/after-end/python/虚拟环境.md","filePath":"views/after-end/python/虚拟环境.md"}'),i={name:"views/after-end/python/虚拟环境.md"},t=n(`<h1 id="虚拟环境" tabindex="-1">虚拟环境 <a class="header-anchor" href="#虚拟环境" aria-label="Permalink to &quot;虚拟环境&quot;">​</a></h1><p>创建虚拟环境是为了在项目之间隔离依赖，确保每个项目都可以使用其所需的特定版本的软件包。在 Python 中，可以使用 virtualenv 或 venv 模块创建虚拟环境。以下是创建虚拟环境的步骤：</p><h2 id="方式一-使用-virtualenv-创建虚拟环境" tabindex="-1">方式一：使用 virtualenv 创建虚拟环境 <a class="header-anchor" href="#方式一-使用-virtualenv-创建虚拟环境" aria-label="Permalink to &quot;方式一：使用 virtualenv 创建虚拟环境&quot;">​</a></h2><ol><li>首先，确保你已经安装了 virtualenv。如果没有安装，可以使用 pip 安装：</li></ol><div class="language- vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang"></span><pre class="shiki shiki-themes github-light github-dark vp-code"><code><span class="line"><span>pip install virtualenv</span></span></code></pre></div><ol start="2"><li>创建一个新目录作为你的项目目录，并在其中打开命令行。</li><li>在命令行中，使用以下命令创建一个名为 myenv 的虚拟环境（你可以将 myenv 替换为任何你喜欢的名称）：</li></ol><div class="language- vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang"></span><pre class="shiki shiki-themes github-light github-dark vp-code"><code><span class="line"><span>virtualenv myenv</span></span></code></pre></div><ol start="4"><li>进入虚拟环境</li></ol><div class="language- vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang"></span><pre class="shiki shiki-themes github-light github-dark vp-code"><code><span class="line"><span># windows</span></span>
<span class="line"><span>myenv\\Scripts\\activate</span></span>
<span class="line"><span></span></span>
<span class="line"><span># macOs 和 Linux</span></span>
<span class="line"><span>source myenv/bin/activate</span></span></code></pre></div><ol start="5"><li>进入虚拟环境后，你会发现命令行提示符前面多了一个 (myenv) 标记，表示你已经在虚拟环境中。</li><li>在虚拟环境中，你可以使用 pip 安装项目所需的任何软件包，例如：</li></ol><div class="language- vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang"></span><pre class="shiki shiki-themes github-light github-dark vp-code"><code><span class="line"><span>pip install package_name</span></span></code></pre></div><ol start="7"><li>当你完成项目后，可以退出虚拟环境，使用以下命令：</li></ol><div class="language- vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang"></span><pre class="shiki shiki-themes github-light github-dark vp-code"><code><span class="line"><span>deactivate</span></span></code></pre></div><h2 id="方式二-使用-venv-创建虚拟环境" tabindex="-1">方式二：使用 venv 创建虚拟环境 <a class="header-anchor" href="#方式二-使用-venv-创建虚拟环境" aria-label="Permalink to &quot;方式二：使用 venv 创建虚拟环境&quot;">​</a></h2><p>venv 是 Python 内置的虚拟环境管理工具，用法与 virtualenv 类似。</p><ol><li>在命令行中，进入到你的项目目录。</li><li>使用以下命令创建一个名为 myenv 的虚拟环境：</li></ol><div class="language- vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang"></span><pre class="shiki shiki-themes github-light github-dark vp-code"><code><span class="line"><span>python -m venv myenv</span></span></code></pre></div><ol start="3"><li>进入虚拟环境</li></ol><div class="language- vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang"></span><pre class="shiki shiki-themes github-light github-dark vp-code"><code><span class="line"><span># windows</span></span>
<span class="line"><span>myenv\\Scripts\\activate</span></span>
<span class="line"><span></span></span>
<span class="line"><span># macOs 和 Linux</span></span>
<span class="line"><span>source myenv/bin/activate</span></span></code></pre></div><ol start="4"><li>进入虚拟环境后，你会发现命令行提示符前面多了一个 (myenv) 标记，表示你已经在虚拟环境中。</li><li>在虚拟环境中，你可以使用 pip 安装项目所需的任何软件包，例如：</li></ol><div class="language- vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang"></span><pre class="shiki shiki-themes github-light github-dark vp-code"><code><span class="line"><span>pip install package_name</span></span></code></pre></div><p>\`</p><p>\`</p>`,23),p=[t];function l(o,c,v,d,h,r){return s(),e("div",null,p)}const m=a(i,[["render",l]]);export{g as __pageData,m as default};
