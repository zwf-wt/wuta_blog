import{_ as e,o,c as a,R as c}from"./chunks/framework.MMMQMGZx.js";const n=JSON.parse('{"title":"第一章：了解Web及网络基础","description":"","frontmatter":{},"headers":[],"relativePath":"views/books/img-http/第一章：了解Web及网络基础.md","filePath":"views/books/img-http/第一章：了解Web及网络基础.md"}'),t={name:"views/books/img-http/第一章：了解Web及网络基础.md"},d=c('<h1 id="第一章-了解web及网络基础" tabindex="-1">第一章：了解Web及网络基础 <a class="header-anchor" href="#第一章-了解web及网络基础" aria-label="Permalink to &quot;第一章：了解Web及网络基础&quot;">​</a></h1><h2 id="_1-1-使用-http-协议访问-web" tabindex="-1">1.1 使用 HTTP 协议访问 web <a class="header-anchor" href="#_1-1-使用-http-协议访问-web" aria-label="Permalink to &quot;1.1 使用 HTTP 协议访问 web&quot;">​</a></h2><blockquote><p>你知道当我们在网页浏览器<code>(Web browser)</code>的地址栏中输入<code>URL</code>时，<code>Web</code>页面是如何呈现的-吗？</p></blockquote><ul><li>当在浏览器的地址栏内输入<code>URL</code>时，可以看到<code>Web</code>页面，当然，即使不了解其运行原理，也能看到<code>Web</code>页面。在浏览器地址栏输入URL之后，信息会被送往某处，然后从某处获得的回复，内容就会显示在<code>Web</code>页面上</li><li><code>Web</code>页面当然不能凭空显示出来。根据 <code>Web</code> 浏览器地址栏中指定的URL, <code>Web</code>浏览器从<code>Web</code>服务器获取文件资源(<code>resource</code>)等信息，从而显示出<code>Web</code>页面。</li><li>像这种通过发送请求获取服务器资源的<code>Web</code>浏览器等，都可称为客户端(<code>Client</code>)</li></ul><p><code>Web</code>使用一种名为<code>HTTP</code>(<code>HyperText Transfer Protocol</code>, 超文本传输协议)的协议作为规范，完成从客户端到服务器端等一系列动作流程。而协议是指规则的约定。可以说，<code>Web</code>是建立在<code>HTTP</code>协议上通信的。</p><h2 id="_1-2-http-的诞生" tabindex="-1">1.2 HTTP 的诞生 <a class="header-anchor" href="#_1-2-http-的诞生" aria-label="Permalink to &quot;1.2 HTTP 的诞生&quot;">​</a></h2><h3 id="http-0-9" tabindex="-1">HTTP 0.9 <a class="header-anchor" href="#http-0-9" aria-label="Permalink to &quot;HTTP 0.9&quot;">​</a></h3><h3 id="http-1-0" tabindex="-1">HTTP 1.0 <a class="header-anchor" href="#http-1-0" aria-label="Permalink to &quot;HTTP 1.0&quot;">​</a></h3><h3 id="http-1-1" tabindex="-1">HTTP 1.1 <a class="header-anchor" href="#http-1-1" aria-label="Permalink to &quot;HTTP 1.1&quot;">​</a></h3><h3 id="http-2-0" tabindex="-1">HTTP 2.0 <a class="header-anchor" href="#http-2-0" aria-label="Permalink to &quot;HTTP 2.0&quot;">​</a></h3><h2 id="_1-3-网络基础-tcp-ip" tabindex="-1">1.3 网络基础 TCP/IP <a class="header-anchor" href="#_1-3-网络基础-tcp-ip" aria-label="Permalink to &quot;1.3 网络基础 TCP/IP&quot;">​</a></h2><blockquote><p>为了理解HTTP, 我们有必要事先了解一下TCP/IP协议族。通常使用的网络(包括互联网)是在TCP/IP协议族的基础上运作的。而 HTTP属于它内部的一个子集(应用层)。</p></blockquote><h3 id="_1-3-1-tcp-ip-协议族" tabindex="-1">1.3.1 TCP/IP 协议族 <a class="header-anchor" href="#_1-3-1-tcp-ip-协议族" aria-label="Permalink to &quot;1.3.1 TCP/IP 协议族&quot;">​</a></h3><p>计算机与网络设备要相互通信，双方就必须基于相同的方法。比如，如何探测到通信目标、由哪一边先发起通信、使用哪种语言进行通信、怎样结束通信等规则都需要事先确定。不同的硬件、操作系统之间的通信。所有的这一切都需要一种规则。而我们就把这种规则称为协议(protocol)</p><blockquote><p><code>IEEE 802.3</code>、<code>FDDI</code>、<code>ICMP</code>、 <code>TCP</code>、<code>IP</code>、<code>FTP</code>、<code>DNS</code>、<code>UDP</code>、<code>SMTP</code>、<code>HTTP</code>、<code>PPPoE</code></p></blockquote><p>协议中存在各式各样的内容。从电缆的规格到IP地址的选定方法、寻找异地用户的方法、双方建立通信的顺序，以及Web页面显示需要处理的步骤，等等。 像这样把与互联网相关联的协议集合起来总称为TCP/IP。也有说法认为，TCP/IP是指TCP和IP这两种协议。还有一种说法认为，TCP/IP是在IP协议的通信过程中，使用到的协议族的统称。</p>',16),r=[d];function h(i,l,P,b,T,p){return o(),a("div",null,r)}const _=e(t,[["render",h]]);export{n as __pageData,_ as default};
