import{_ as e,o,c as t,R as i}from"./chunks/framework.H90atOJc.js";const u=JSON.parse('{"title":"DOM相关","description":"","frontmatter":{},"headers":[],"relativePath":"views/interview-questions/dom.md","filePath":"views/interview-questions/dom.md"}'),c={name:"views/interview-questions/dom.md"},l=i('<h1 id="dom相关" tabindex="-1">DOM相关 <a class="header-anchor" href="#dom相关" aria-label="Permalink to &quot;DOM相关&quot;">​</a></h1><h2 id="_17-js-的各种位置-比-clientheight-scrollheight-offsetheight-以及scrolltop-offsettop-clienttop-的区别" tabindex="-1">17. JS 的各种位置，比 clientHeight,scrollHeight,offsetHeight ,以及scrollTop, offsetTop,clientTop 的区别? <a class="header-anchor" href="#_17-js-的各种位置-比-clientheight-scrollheight-offsetheight-以及scrolltop-offsettop-clienttop-的区别" aria-label="Permalink to &quot;17. JS 的各种位置，比 clientHeight,scrollHeight,offsetHeight ,以及scrollTop, offsetTop,clientTop 的区别?&quot;">​</a></h2><ul><li><code>clientHeight</code>: 表示的是可视区域的高度，不包含<code>border</code>和滚动条</li><li><code>offsetHeight</code>: 表示可视区域的高度，包合了<code>border</code>和滚动条</li><li><code>scrollHeight</code>: 表示了所有区域的高度，包含了因为滚动被隐藏的部分</li><li><code>clientTop</code>: 表示边框 <code>border</code> 的厚度，在未指定的情况下一般为<code>O</code></li><li><code>scrollTop</code>: 滚动后被隐藏的高度，获取对象相对于由 <code>offsetParent</code> 属性指定的父坐标(<code>css</code> 定位的元素或 <code>body</code> 元素)距离顶端的高度</li></ul><h2 id="_26-预加载和懒加载的区别-预加载在什么时间加载合适" tabindex="-1">26. 预加载和懒加载的区别，预加载在什么时间加载合适 <a class="header-anchor" href="#_26-预加载和懒加载的区别-预加载在什么时间加载合适" aria-label="Permalink to &quot;26. 预加载和懒加载的区别，预加载在什么时间加载合适&quot;">​</a></h2><ul><li>预加载是指在页面加载完成之前，提前将所需资源下载，之后使用的时候从缓存中调用。</li><li>懒加载是延迟加载，按照一定的条件或者需求等到满足条件的时候再加载对应的资源</li></ul><blockquote><p>两者主要区别是一个是提前加载，一个是迟缓其至不加载。懒加载对服务器前端有一定的缓解压力作用，预加载则会增加服务器前端压力。</p></blockquote>',6),s=[l];function d(a,r,n,h,f,_){return o(),t("div",null,s)}const m=e(c,[["render",d]]);export{u as __pageData,m as default};
