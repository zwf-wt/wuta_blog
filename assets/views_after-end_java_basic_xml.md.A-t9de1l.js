import{_ as e,o as a,c as t,R as i}from"./chunks/framework.MMMQMGZx.js";const M=JSON.parse('{"title":"XML","description":"","frontmatter":{},"headers":[],"relativePath":"views/after-end/java/basic/xml.md","filePath":"views/after-end/java/basic/xml.md"}'),l={name:"views/after-end/java/basic/xml.md"},o=i('<h1 id="xml" tabindex="-1">XML <a class="header-anchor" href="#xml" aria-label="Permalink to &quot;XML&quot;">​</a></h1><p><code>XML</code>是<code>Extensible Markup Language</code>的缩写，翻译过来就是<code>可扩展标记语言</code>。所以很明显，XML和HTML一样，都是标记语言。也就是说它们的基本语法都是标签</p><ul><li>可扩展三个字表面上的意思是XML允许自定义格式。但这不代表可以随便写</li><li>在XML基本语法规范的基础上，使用的那些第三方应用程序、框架会通过XML约束的方式强制规定配置文件中可以写什么和怎么定</li><li>XML基本语法这个知识点的定位是：我们不需要从零开始，从头到尾的一行一行编写XML文档，而是在第三方应用程序、框架已提供的配置文件的基础上修改。要改成什么样取决于你的需求，而怎么改取决XML基本语法和具体的XML约束。</li></ul><h2 id="常见的配置文件类型" tabindex="-1">常见的配置文件类型 <a class="header-anchor" href="#常见的配置文件类型" aria-label="Permalink to &quot;常见的配置文件类型&quot;">​</a></h2><ol><li>properties文件，例如druid连接池就是使用properties文件作为配置文件</li><li>xml文件，例如Tomcat就是使用XML文件作为配置文件</li><li>YAML文件，例如SprringBoot就是使用YAML文件作为配置文件</li><li>JSON文件，常用用来做文件传输，也可以用来做前端或者移动端的配置文件</li></ol>',5),r=[o];function s(c,d,n,_,m,p){return a(),t("div",null,r)}const h=e(l,[["render",s]]);export{M as __pageData,h as default};
