import{_ as t,o as e,c as a,R as i}from"./chunks/framework.MMMQMGZx.js";const m=JSON.parse('{"title":"其它","description":"","frontmatter":{},"headers":[],"relativePath":"views/interview-questions/dataStructure-algorithm/other.md","filePath":"views/interview-questions/dataStructure-algorithm/other.md"}'),l={name:"views/interview-questions/dataStructure-algorithm/other.md"},r=i('<h1 id="其它" tabindex="-1">其它 <a class="header-anchor" href="#其它" aria-label="Permalink to &quot;其它&quot;">​</a></h1><h2 id="_1-有9个小球-其中有1个球重量不一致-现在有一个天平-如何分2次找出这个小球。如果2次不行-你认为最少几次可以分出来" tabindex="-1">1. 有9个小球，其中有1个球重量不一致，现在有一个天平，如何分2次找出这个小球。如果2次不行，你认为最少几次可以分出来 <a class="header-anchor" href="#_1-有9个小球-其中有1个球重量不一致-现在有一个天平-如何分2次找出这个小球。如果2次不行-你认为最少几次可以分出来" aria-label="Permalink to &quot;1. 有9个小球，其中有1个球重量不一致，现在有一个天平，如何分2次找出这个小球。如果2次不行，你认为最少几次可以分出来&quot;">​</a></h2><p>首先，我们可以使用二分法的思路来解决这个问题。将9个小球分成3组，每组3个小球。</p><ol><li>第一次称重：</li></ol><ul><li>将第1组放在天平的左侧，第2组放在右侧。 <ul><li>如果两边重量相等，说明第3组中有重的球，而且可以确定是在第3组中。接着比较第3组的三个球，可以在第二次称重中找到不一样重的球。</li><li>如果两边重量不相等，那么重的球肯定在较重的那一组中。</li></ul></li></ul><ol start="2"><li>第二次称重：</li></ol><ul><li>将较重的那一组中的3个小球分别标记为A、B、C。取A和B放在天平的两端称重。 <ul><li>如果 A 和 B 相等，说明 C 是重球。</li><li>如果 A 和 B 不相等，那么较重的那个就是重球。</li></ul></li></ul><p>因此，最少需要2次称重就可以找出这个小球。</p>',8),o=[r];function s(n,_,c,u,h,d){return e(),a("div",null,o)}const f=t(l,[["render",s]]);export{m as __pageData,f as default};
